
# depending on your Qt configuration, you want to enable or disable
# one of the release/debug builds (if all three lines are commented,
# the default of your Qt installation will used)

# build with both debug and release mode
#CONFIG += debug_and_release build_all

# build with release mode only
#CONFIG += release

# build with debug mode only
#CONFIG += debug

# for all debug builds, add "_d" extension to target
CONFIG(debug, debug|release) {
  TARGET = $${TARGET}_d
}

# Try files that are generated by the user:
PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp

defineTest(useGeneratedFrom) {
  MAJ = $$1
  MIN = $$2
  warning( "Generated files for Qt $${QT_MAJOR_VERSION}.$$QT_MINOR_VERSION not found,\
    using probably inconsistent structures for Qt $${MAJ}.$$MIN instead." )
  PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_$$MAJ$$MIN
  export(PYTHONQT_GENERATED_PATH)
  return(true)
}

!exists($$PYTHONQT_GENERATED_PATH) {
  # If no files are generated, try the checked-in wrappers:
  PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_$${QT_MAJOR_VERSION}$${QT_MINOR_VERSION}

  !exists($$PYTHONQT_GENERATED_PATH) {
    equals( QT_MAJOR_VERSION, 5 ) {
      if(equals( QT_MINOR_VERSION, 1 ) | equals( QT_MINOR_VERSION, 2 )):useGeneratedFrom(5, 0)
      else:equals( QT_MINOR_VERSION, 5 ):useGeneratedFrom(5, 4)
      else:if(equals( QT_MINOR_VERSION,  7) | equals( QT_MINOR_VERSION, 8 ) \
        | equals( QT_MINOR_VERSION, 9 ) | equals( QT_MINOR_VERSION, 10 )):useGeneratedFrom(5, 6)
      else:if(equals( QT_MINOR_VERSION,  13) | equals( QT_MINOR_VERSION, 14 ) \
        | equals( QT_MINOR_VERSION, 15 )):useGeneratedFrom(5, 12)
    } else {
      error("Unsupported Qt version $$QT_MAJOR_VERSION")
    }
  }
}

VERSION = 3.2.0
greaterThan(QT_MAJOR_VERSION, 5) | !lessThan(QT_MINOR_VERSION, 7): CONFIG += c++11
win32: CONFIG += skip_target_version_ext
gcc|win32-clang-msvc:QMAKE_CXXFLAGS += -Wno-deprecated-declarations -Wuninitialized -Winit-self -ansi -pedantic
win32-clang-msvc:QMAKE_CXXFLAGS += -Wno-unused-command-line-argument
#Do not issue warning to system includes
gcc:!isEmpty(QT_INSTALL_HEADERS): QMAKE_CXXFLAGS += -isystem $$[QT_INSTALL_HEADERS]
